# coding: utf-8

"""
    

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.11.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from oxford_dictionaries_api.models.arrayofstrings import Arrayofstrings  # noqa: F401,E501


class FiltersResults(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'entries': 'Arrayofstrings',
        'inflections': 'Arrayofstrings',
        'translations': 'Arrayofstrings',
        'wordlist': 'Arrayofstrings'
    }

    attribute_map = {
        'entries': 'entries',
        'inflections': 'inflections',
        'translations': 'translations',
        'wordlist': 'wordlist'
    }

    def __init__(self, entries=None, inflections=None, translations=None, wordlist=None):  # noqa: E501
        """FiltersResults - a model defined in Swagger"""  # noqa: E501

        self._entries = None
        self._inflections = None
        self._translations = None
        self._wordlist = None
        self.discriminator = None

        if entries is not None:
            self.entries = entries
        if inflections is not None:
            self.inflections = inflections
        if translations is not None:
            self.translations = translations
        if wordlist is not None:
            self.wordlist = wordlist

    @property
    def entries(self):
        """Gets the entries of this FiltersResults.  # noqa: E501

        A list of filters available for Retrieve Entry endpoint  # noqa: E501

        :return: The entries of this FiltersResults.  # noqa: E501
        :rtype: Arrayofstrings
        """
        return self._entries

    @entries.setter
    def entries(self, entries):
        """Sets the entries of this FiltersResults.

        A list of filters available for Retrieve Entry endpoint  # noqa: E501

        :param entries: The entries of this FiltersResults.  # noqa: E501
        :type: Arrayofstrings
        """

        self._entries = entries

    @property
    def inflections(self):
        """Gets the inflections of this FiltersResults.  # noqa: E501

        A list of filters available for LEMMATRON endpoint  # noqa: E501

        :return: The inflections of this FiltersResults.  # noqa: E501
        :rtype: Arrayofstrings
        """
        return self._inflections

    @inflections.setter
    def inflections(self, inflections):
        """Sets the inflections of this FiltersResults.

        A list of filters available for LEMMATRON endpoint  # noqa: E501

        :param inflections: The inflections of this FiltersResults.  # noqa: E501
        :type: Arrayofstrings
        """

        self._inflections = inflections

    @property
    def translations(self):
        """Gets the translations of this FiltersResults.  # noqa: E501

        A list of filters available for Translations endpoint  # noqa: E501

        :return: The translations of this FiltersResults.  # noqa: E501
        :rtype: Arrayofstrings
        """
        return self._translations

    @translations.setter
    def translations(self, translations):
        """Sets the translations of this FiltersResults.

        A list of filters available for Translations endpoint  # noqa: E501

        :param translations: The translations of this FiltersResults.  # noqa: E501
        :type: Arrayofstrings
        """

        self._translations = translations

    @property
    def wordlist(self):
        """Gets the wordlist of this FiltersResults.  # noqa: E501

        A list of filters available for Translations endpoint  # noqa: E501

        :return: The wordlist of this FiltersResults.  # noqa: E501
        :rtype: Arrayofstrings
        """
        return self._wordlist

    @wordlist.setter
    def wordlist(self, wordlist):
        """Sets the wordlist of this FiltersResults.

        A list of filters available for Translations endpoint  # noqa: E501

        :param wordlist: The wordlist of this FiltersResults.  # noqa: E501
        :type: Arrayofstrings
        """

        self._wordlist = wordlist

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FiltersResults):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
